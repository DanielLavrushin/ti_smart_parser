# .github/workflows/dotnet-build.yml
name: Build and Publish SmartParser

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      publish-release:
        description: 'Publish Release'
        required: false
        default: 'false'
      version:
        description: 'Version'
        required: false
        default: ''
 
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
            
      - name: Restore dependencies
        run: dotnet restore Smart.Parser.sln

      - name: Build the project
        run: dotnet build Smart.Parser.sln --configuration Release

#      - name: Run Unit Tests
#        run: dotnet test Smart.Parser.sln --configuration Release --no-build --verbosity normal

      - name: Publish the project
        run: dotnet publish src/Smart.Parser.csproj --configuration Release --output ./published

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: smart-parser-release
          path: ./published
          
      - name: Create release
        if: ${{ inputs.publish-release == 'true' }}
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ inputs.version }}
          release_name: Release v${{ inputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release
        if: ${{ inputs.publish-release == 'true' }}
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./published
          asset_name: smart-parser-release.zip
          asset_content_type: application/zip
