# Процесс создание базы disclosures = dlrobot+declarator

#======================================================================
#========                     Инициализация                    ========
#=====================================================================

#1.1 идем в  ~/smart_parser/tools/INSTALL.txt и выполняем все шаги

#1.2. Объявление переменных (кроме тех, что уже объявлены в ~/smart_parser/tools/INSTALL.txt)

export TOOLS=~/smart_parser/tools
CURRENT_DATE=`date  +'%Y-%m-%d'`
export CRAWL_EPOCH=3
export OLD_DLROBOT_FOLDER=~/declarator_hdd/declarator/2020-05-15
export DLROBOT_FOLDER=~/declarator_hdd/declarator/2020-09-29
export HUMAN_FILES_JSON=human_files.json
export HUMAN_FILES_FOLDER=~/declarator_hdd/declarator/human_files
export HUMAN_JSONS_FOLDER=~/declarator_hdd/declarator/human_jsons

export INPUT_DLROBOT_PROJECTS=input_projects
export DISCLOSURES_FILES=domains
export PYTHONPATH=$TOOLS/disclosures_site:$TOOLS


#======================================================================
#======== Запуск сервиса smart_parser_cach в вечном режиме     ========
#=====================================================================
#2.1
 export SMART_PARSER_CACHE_FOLDER=~/declarator_hdd/declarator/smart_parser_cache
 mkdir $SMART_PARSER_CACHE_FOLDER
 cd $SMART_PARSER_CACHE_FOLDER

#======================================================================
#======== Обновление ручной базы (declarator), раз в квартал?  ========
#=====================================================================
#3.1 построение базы declarator:
    cd ~
    git clone sokirko@bitbucket.org:TI-Russia/declarator.git
    cd declarator/trasparency
    pip3 install -r ../deploy/requirements.txt
    echo "CREATE DATABASE declarator CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci
    create user if not exists 'declarator'@ identified by 'declarator';
    GRANT ALL PRIVILEGES ON *.* TO 'declarator'@;" | mysql
    #browse https://declarator.org/manage/dump_files/ и найти свежий дамп
    wget https://declarator.org/manage/dump_files/prod????.tar.gz
    zcat prod????.tar.gz | mysql -D declarator


#3.2  получить все новые (!) файлы из declarator в каталог $HUMAN_FILES_FOLDER и создать файл human_files.json
    python $TOOLS/disclosures_site/scripts/export_human_files.py --table declarations_documentfile --output-folder $HUMAN_FILES_FOLDER --output-json $HUMAN_FILES_JSON

#3.3  Отправляем все новые Pdf на конвертацию
    find $HUMAN_FILES_FOLDER -name '*.pdf' |  xargs --verbose -n 10  python $TOOLS/ConvStorage/scripts/convert_pdf.py --skip-receiving

#3.3 процессим все human files c помощью smart_parser
     find $HUMAN_FILES_FOLDER -type  f  | xargs -n 1 --verbose  curl http://$SMART_PARSER_SERVER_ADDRESS/ -T

#======================================================================
#======== Запуск dlrobot_central в вечном режиме            ========
#=====================================================================

#======================================================================
#======== Обход с помощью dlrobot (раз в месяц?)            ========
#=====================================================================

#4.1 создание нового каталога
    mkdir $DLROBOT_FOLDER
    cd $DLROBOT_FOLDER

#4.2 Построение списка всех входных доменов
    # optional python $TOOLS/robots/dlrobot/scripts/check_domains.py --human-files $HUMAN_FILES_JSON --reached-domains ../domains/new_domains.txt  --timeouted-domains timeouted-domains.txt
    python $TOOLS/robots/dlrobot/scripts/create_by_domains.py --domains $TOOLS/robots/dlrobot/domains.txt --domains $TOOLS/robots/dlrobot/domains/fix_region.txt --output-folder $INPUT_DLROBOT_PROJECTS

#4.3  Запуск dlrobot
   cd $DLROBOT_FOLDER
   rm nohup.out
   # взять порт из DLROBOT_CENTRAL_SERVER_ADDRESS
   nohup python3 $TOOLS/robots/dlrobot/scripts/cloud/dlrobot_central.py  --server-address 192.168.100.151:8089 --input-folder $INPUT_DLROBOT_PROJECTS --result-folder processed_projects --read-previous-results --check-yandex-cloud &

#4.4 получение каталога domains
    python $TOOLS/disclosures_site/scripts/copy_dlrobot_documents_to_one_folder.py --input-glob  'processed_projects' --output-folder $DISCLOSURES_FILES --output-json copy_to_one_folder.json


#5.  слияние по файлам dlrobot, declarator  и старого disclosures , получение dlrobot_human.json
    python $TOOLS/disclosures_site/scripts/join_human_and_dlrobot.py --dlrobot-folder $DISCLOSURES_FILES  --copy-to-one-folder-json copy_to_one_folder.json \
        --human-json $HUMAN_FILES_JSON --old-dlrobot-human-json $OLD_DLROBOT_FOLDER/dlrobot_human.json \
        --crawl-epoch $CRAWL_EPOCH --output-json dlrobot_human.json


#5.1  получение статистики по dlrobot_human.json, сравнение с предыдущим обходом
    python $TOOLS/disclosures_site/scripts/dlrobot_human_stats.py dlrobot_human.json > dlrobot_human.json.stats

#5.2  факультативно, переконвертация  pdf, которые не были переконвертированы раньше
 find  $DISCLOSURES_FILES -name '*.pdf' -type f | xargs -n 100 --verbose python $TOOLS/ConvStorage/scripts/convert_pdf.py --skip-receiving --conversion-timeout 20

#5.3  Запуск текущего классификатора на старых файлах из dlrobot и удаление тех, что не прошел классификатор
  find  $DISCLOSURES_FILES -name 'o*' -type f | xargs -P 4 -n 1 --verbose python $TOOLS/DeclDocRecognizer/dlrecognizer.py --delete-negative --source-file
  python $TOOLS/disclosures_site/scripts/clear_json_entries_for_deleted_files.py dlrobot_human.json
  python $TOOLS/disclosures_site/scripts/dlrobot_human_stats.py dlrobot_human.json > dlrobot_human.json.stats

#6.  запуск smart_parser
    bash $TOOLS/CorpusProcess/ubuntu_parallel/run_smart_parser_all.sh $DLROBOT_FOLDER/$DISCLOSURES_FILES $HOSTS

#6.1 создание ручных json
    [ -d  $HUMAN_JSONS_FOLDER ] || mkdir $HUMAN_JSONS_FOLDER
    cd ~/declarator/transparency
    source ../venv/bin/activate
    python3 manage.py export_in_smart_parser_format --output-folder $HUMAN_JSONS_FOLDER

#7.  инициализация базы disclosures
    follow $TOOLS/disclosures_site/INSTALL.txt


#8.  Импорт json в dislosures_db
   cd $DLROBOT_FOLDER
   cat $TOOLS/disclosures_site/clear_database.sql | mysql -D disclosures_db -u disclosures -pdisclosures
       python $TOOLS/disclosures_site/manage.py import_json --smart-parser-human-json-folder $HUMAN_JSONS_FOLDER  --dlrobot-human dlrobot_human.json  --process-count 3 --settings disclosures.settings.prod
   python $TOOLS/disclosures_site/manage.py copy_person_id --settings disclosures.settings.prod

#9.  тестирование сливалки
   export DEDUPE_MODEL=~/declarator/transparency/toloka/dedupe_model/dedupe.info

   cd $TOOLS/disclosures_site/toloka/pools
   bash -x make_pools.sh

#10.  запуск сливалки, 4 gb memory each family portion, 30 GB temp files, no more than one process per workstation
   cd $TOOLS/disclosures_site
   export SURNAME_SPANS=`python manage.py generate_dedupe_pairs  --print-family-prefixes   --settings disclosures.settings.prod`
   export DISCLOSURES_DB_HOST=migalka
   echo $HOSTS  |  tr "," "\n" | xargs --verbose -n 1 -I {} ssh {} git  -C ~/smart_parser pull
   cat clear_dedupe_artefacts.sql | mysql -D disclosures_db -u disclosures -pdisclosures

   #10.2 many hosts
     parallel --jobs 1 --env DISCLOSURES_DB_HOST --env PYTHONPATH -S $HOSTS --basefile $DEDUPE_MODEL  --verbose \
        python $TOOLS/disclosures_site/manage.py generate_dedupe_pairs --dedupe-model-file $DEDUPE_MODEL --verbose 3  --threshold 0.9  --surname-bounds {} --write-to-db --settings disclosures.settings.prod ::: $SURNAME_SPANS



#11 mysqldump -u disclosures -pdisclosures disclosures_db  |  gzip -c > $DLROBOT_FOLDER/disclosures.sql.gz

#12 удаление ненужных файлов
    #cd $DLROBOT_FOLDER
    #rm -rf $DISCLOSURES_FILES
    этого делать нельзя, поскольку web-сайт ссылается на эту директорию

#13 go to prod
    mysqladmin drop  disclosures_db
    cd ~/smart_parser.disclosures_prod/tools/disclosures_site
    cat create_disclosures_db.sql | sudo mysql
    zcat $DLROBOT_FOLDER/disclosures.sql.gz | mysql -u disclosures -pdisclosures -D disclosures_db

    python manage.py search_index --rebuild  --settings disclosures.settings.prod

    # to rebuild one index
    #python manage.py search_index --rebuild  -f --settings disclosures.settings.dev --models declarations.Section

    # index sizes
    # curl 127.0.0.1:9200/_cat/indices

    # some query example
    #curl -X GET "localhost:9200/declaration_file_prod/_search?pretty" -H 'Content-Type: application/json' -d'{"query": {"match" : {"office_id" : 5963}}}'


14. restart disclosures service
     sudo systemctl stop disclosures
     sudo systemctl start disclosures
