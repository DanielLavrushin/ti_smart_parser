
This configuration is tested on Ubuntu 18, 20

0.1 install python 3.8 (cannot install http module to ububtu server under lower python versions)

0.2 install mysql 8

0.3 enable qcache in mysql: https://codebeer.ru/nastrojka-raboty-mysql-query-cache
query_cache_type        = ON
query_cache_limit       = 1M
query_cache_size        = 128M


1. Install elastic search, follow https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html
    sudo apt-get install apt-transport-https
    echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list
    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D27D666CD88E42B4
    sudo apt-get update
    sudo apt-get install elasticsearch
    sudo /bin/systemctl daemon-reload
    sudo /bin/systemctl enable elasticsearch.service
    sudo systemctl start elasticsearch.service

1.1  For Yandex.Cloud, increase swap file
   sudo swapoff -a
   sudo dd if=/dev/zero of=/swapfile bs=1M count=1024
   sudo mkswap /swapfile
   sudo swapon /swapfile

2. sudo apt update
   sudo apt install -y  curl p7zip-full unrar libcurl4-openssl-dev libssl-dev libreoffice \
        python3-wheel calibre  catdoc xlsx2csv default-libmysqlclient-dev libgdiplus python3-pip python3.8-dev \
        firefox git

3. git clone https://github.com/TI-Russia/smart_parser.git ~/smart_parser

4. Install python3 modules in virtual env
    3.1 developer version:
        cd ~/smart_parser/tools
        mkdir venv
        python3 -m venv venv
        source ~/smart_parser/tools/venv/bin/activate
        pip3 install -r ~/smart_parser/tools/requirements.txt
    3.2 production version
        pip3 install -r /home/sokirko/smart_parser/tools/requirements.txt


5. install dotnet according  sudo apt-get install -y dotnet-runtime-3.1
      wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      sudo dpkg -i packages-microsoft-prod.deb
      sudo apt-get update
      sudo apt-get install -y apt-transport-https
      sudo apt-get update
      sudo apt-get install -y dotnet-sdk-3.1

6.  Get lic.bin (proprietary license file) from sokirko@yandex.ru, move lic.bin to $HOME, add to ~/.profile:
   scp -P 2223 disclosures.ru:~/lic.bin ~/

6.1 update ~/.profile
    export ASPOSE_LIC=~/lic.bin
    export PYTHONPATH=~/smart_parser/tools:$PYTHONPATH
    export DECLARATOR_CONV_URL=disclosures.ru:8091
    source ~/.profile

7. compile smart_parser itself (c#, ~/smart_parser/src)
   7.1 Compile smart_parser
      dotnet build -c Release ~/smart_parser/src

   7.2 Test smart_parser
      dotnet test -c Release ~/smart_parser

8. compile  ~/smart_parser/tools/Office2Txt
   dotnet build -c Release ~/smart_parser/tools/Office2Txt
   dotnet test -c Release ~/smart_parser/tools/Office2Txt

9.  download https://github.com/mozilla/geckodriver/releases/tag/v0.26.0 (linux or windows);
   9.1 for linux
      cd  /usr/local/bin
      sudo wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
      sudo tar xfz geckodriver-v0.26.0-linux64.tar.gz
    9.2  for windows
        todo

10. Test dlrobot
    cd ~/smart_parser/tools/robots/dlrobot/tests
    bash run_tests.sh

11. install yandex cloud console (central)
   curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
   source ~/.profile
   get token from sokirko@yandex.ru (more ~/.config/yandex-cloud/config.yaml)
   yc init
   Which zone do you want to use as a profile default ru-central1-c
   yc compute instance list

12. установка даты
   sudo dpkg-reconfigure tzdata

13. Crete dlrobot worker service:
sudo cp ~/smart_parser/tools/robots/dlrobot/scripts/cloud/dlrobot_worker.service /etc/systemd/system
sudo chmod 644 /etc/systemd/system/dlrobot_worker.service
sudo systemctl enable dlrobot_worker
sudo systemctl daemon-reload


#adjust depending on workstation (on yandex-cloud --worker-count 2, otherwise --worker-count 4)
sudo nano /etc/systemd/system/dlrobot_worker.service
sudo systemctl start dlrobot_worker

run
  sudo visudo
add line:
sokirko ALL=(ALL) NOPASSWD: /bin/systemctl start dlrobot_worker,  /bin/systemctl stop  dlrobot_worker

14. For notebooks, uncomment in /etc/systemd/logind.conf the following lines:

 HandleLidSwitch=ignore
 HandleLidSwitchDocked=ignore

 then
   sudo systemctl restart systemd-logind
